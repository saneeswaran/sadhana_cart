// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'product_model.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

_$ProductModelImpl _$$ProductModelImplFromJson(Map<String, dynamic> json) =>
    _$ProductModelImpl(
      productId: json['Product ID'] as String?,
      name: json['Name'] as String?,
      description: json['Description'] as String?,
      category: json['Category'] as String?,
      subcategory: json['Subcategory'] as String?,
      baseSku: json['Base SKU'] as String?,
      brand: json['Brand'] as String?,
      price: (json['Price'] as num?)?.toDouble(),
      offerPrice: (json['Offer Price'] as num?)?.toDouble(),
      stock: (json['Stock'] as num?)?.toInt(),
      rating: (json['Rating'] as num?)?.toDouble(),
      images:
          (json['Images'] as List<dynamic>?)?.map((e) => e as String).toList(),
      sellerId: json['Seller ID'] as String?,
      cashOnDelivery: json['Cash On Delivery'] as String?,
      sizeVariants: (json['Size Variants'] as List<dynamic>?)
          ?.map((e) => SizeVariant.fromJson(e as Map<String, dynamic>))
          .toList(),
      timestamp: json['Timestamp'] as String?,
      date: json['Date'] as String?,
      material: json['Material'] as String?,
      fit: json['Fit'] as String?,
      pattern: json['Pattern'] as String?,
      sleeveType: json['Sleeve Type'] as String?,
      careInstruction: json['Care Instructions'] as String?,
      sizeOptions: (json['Size Options'] as List<dynamic>?)
          ?.map((e) => e as String)
          .toList(),
      hsnCode: json['HSN Code'] as String?,
      weight: (json['Weight'] as num?)?.toDouble(),
      length: (json['Length'] as num?)?.toDouble(),
      width: (json['Width'] as num?)?.toDouble(),
      height: (json['Height'] as num?)?.toDouble(),
      fitType: json['Fit Type'] as String?,
      gender: json['Gender'] as String?,
      neckType: json['Neck Type'] as String?,
      occasion: json['Occasion'] as String?,
      stitchType: json['Stitch Type'] as String?,
      vendor: json['Vendor'] as String?,
      variantSku: json['Variant SKU'] as String?,
      closureType: json['Closure Type'] as String?,
      embroideryStyle: json['Embroidery Style'] as String?,
      lining: json['Lining'] as String?,
      model: json['Model'] as String?,
      neckStyle: json['Neck Style'] as String?,
      padType: json['Pad Type'] as String?,
      pockets: json['Pockets'] as String?,
      printType: json['Print Type'] as String?,
      productLength: json['Product Length'] as String?,
      productType: json['Product Type'] as String?,
      riseStyle: json['Rise Style'] as String?,
      sideType: json['Side Type'] as String?,
      sleeve: json['Sleeve'] as String?,
      sleeveStyle: json['Sleeve Style'] as String?,
      slitType: json['Slit Type'] as String?,
      specialFeatures: json['Special Features'] as String?,
      strapType: json['Strap Type'] as String?,
      style: json['Style'] as String?,
      transparent: json['Transparent'] as String?,
      type: json['Type'] as String?,
      workType: json['Work Type'] as String?,
      blouseAvailability: json['Blouse Availability'] as String?,
      patternCoverage: json['Pattern Coverage'] as String?,
      age: json['Age'] as String?,
      ageGroup: json['Age Group'] as String?,
      waistStyle: json['Waist Style'] as String?,
      mobileColor: json['Mobile Color'] as String?,
      ram: json['RAM'] as String?,
      storage: json['Storage'] as String?,
      battery: json['Battery'] as String?,
      camera: json['Camera'] as String?,
      processor: json['Processor'] as String?,
      display: json['Display'] as String?,
      os: json['OS'] as String?,
      connectivity: json['Connectivity'] as String?,
      warranty: json['Warranty'] as String?,
      color: json['Color'] as String?,
      designOptions: json['Design Options'] as String?,
      resolution: json['Resolution'] as String?,
      displayType: json['Display Type'] as String?,
      smartFeatures: json['Smart Features'] as String?,
      energyRating: json['Energy Rating'] as String?,
      powerConsumption: json['Power Consumption'] as String?,
      expDate: json['Exp Date'] == null
          ? null
          : DateTime.parse(json['Exp Date'] as String),
      mfgDate: json['MFG Date'] as String?,
      highlight: json['Highlight'] as String?,
      otherHighlights: json['Other Highlights'] as String?,
      jewelleryMaterial: json['Jewellery Material'] as String?,
      purity: json['Purity'] as String?,
      jewelleryWeight: (json['Jewellery Weight'] as num?)?.toDouble(),
      jewelleryColor: json['Jewellery Color'] as String?,
      jewellerySize: json['Jewellery Size'] as String?,
      gemstone: json['Gemstone'] as String?,
      certification: json['Certification'] as String?,
      title: json['Title'] as String?,
      author: json['Author'] as String?,
      publisher: json['Publisher'] as String?,
      edition: json['Edition'] as String?,
      language: json['Language'] as String?,
      isbn: json['ISBN'] as String?,
      pages: (json['Pages'] as num?)?.toInt(),
      binding: json['Binding'] as String?,
      genre: json['Genre'] as String?,
      frameMaterial: json['Frame Material'] as String?,
      mountingType: json['Mounting Type'] as String?,
      shadeColor: json['Shade Color'] as String?,
      beautyType: json['Beauty Type'] as String?,
      ingredients: (json['Ingredients'] as List<dynamic>?)
          ?.map((e) => e as String)
          .toList(),
      skinHairType: json['Skin Hair Type'] as String?,
      beautyWeightVolume: json['Beauty Weight Volume'] as String?,
      beautyExpiryDate: json['Beauty Expiry Date'] as String?,
      dermatologicallyTested: json['Dermatologically Tested'] as String?,
      dimension: json['Dimension'] as String?,
      weightCapacity: json['Weight Capacity'] as String?,
      assembly: json['Assembly'] as String?,
      roomType: json['Room Type'] as String?,
      weightVolume: json['Weight Volume'] as String?,
      quantity: json['Quantity'] as String?,
      organic: json['Organic'] as String?,
      expiryDate: json['Expiry Date'] as String?,
      storageInstruction: json['Storage Instruction'] as String?,
      dietaryPreference: json['Dietary Preference'] as String?,
      graphics: json['Graphics'] as String?,
      screenSize: json['Screen Size'] as String?,
      operatingSystem: json['Operating System'] as String?,
      port: json['Port'] as String?,
      footwearMaterial: json['Footwear Material'] as String?,
      footwearType: json['Footwear Type'] as String?,
      shoeSize: json['Shoe Size'] as String?,
      heelHeight: json['Heel Height'] as String?,
      soleMaterial: json['Sole Material'] as String?,
      toeShape: json['Toe Shape'] as String?,
    );

Map<String, dynamic> _$$ProductModelImplToJson(_$ProductModelImpl instance) =>
    <String, dynamic>{
      'Product ID': instance.productId,
      'Name': instance.name,
      'Description': instance.description,
      'Category': instance.category,
      'Subcategory': instance.subcategory,
      'Base SKU': instance.baseSku,
      'Brand': instance.brand,
      'Price': instance.price,
      'Offer Price': instance.offerPrice,
      'Stock': instance.stock,
      'Rating': instance.rating,
      'Images': instance.images,
      'Seller ID': instance.sellerId,
      'Cash On Delivery': instance.cashOnDelivery,
      'Size Variants': instance.sizeVariants,
      'Timestamp': instance.timestamp,
      'Date': instance.date,
      'Material': instance.material,
      'Fit': instance.fit,
      'Pattern': instance.pattern,
      'Sleeve Type': instance.sleeveType,
      'Care Instructions': instance.careInstruction,
      'Size Options': instance.sizeOptions,
      'HSN Code': instance.hsnCode,
      'Weight': instance.weight,
      'Length': instance.length,
      'Width': instance.width,
      'Height': instance.height,
      'Fit Type': instance.fitType,
      'Gender': instance.gender,
      'Neck Type': instance.neckType,
      'Occasion': instance.occasion,
      'Stitch Type': instance.stitchType,
      'Vendor': instance.vendor,
      'Variant SKU': instance.variantSku,
      'Closure Type': instance.closureType,
      'Embroidery Style': instance.embroideryStyle,
      'Lining': instance.lining,
      'Model': instance.model,
      'Neck Style': instance.neckStyle,
      'Pad Type': instance.padType,
      'Pockets': instance.pockets,
      'Print Type': instance.printType,
      'Product Length': instance.productLength,
      'Product Type': instance.productType,
      'Rise Style': instance.riseStyle,
      'Side Type': instance.sideType,
      'Sleeve': instance.sleeve,
      'Sleeve Style': instance.sleeveStyle,
      'Slit Type': instance.slitType,
      'Special Features': instance.specialFeatures,
      'Strap Type': instance.strapType,
      'Style': instance.style,
      'Transparent': instance.transparent,
      'Type': instance.type,
      'Work Type': instance.workType,
      'Blouse Availability': instance.blouseAvailability,
      'Pattern Coverage': instance.patternCoverage,
      'Age': instance.age,
      'Age Group': instance.ageGroup,
      'Waist Style': instance.waistStyle,
      'Mobile Color': instance.mobileColor,
      'RAM': instance.ram,
      'Storage': instance.storage,
      'Battery': instance.battery,
      'Camera': instance.camera,
      'Processor': instance.processor,
      'Display': instance.display,
      'OS': instance.os,
      'Connectivity': instance.connectivity,
      'Warranty': instance.warranty,
      'Color': instance.color,
      'Design Options': instance.designOptions,
      'Resolution': instance.resolution,
      'Display Type': instance.displayType,
      'Smart Features': instance.smartFeatures,
      'Energy Rating': instance.energyRating,
      'Power Consumption': instance.powerConsumption,
      'Exp Date': instance.expDate?.toIso8601String(),
      'MFG Date': instance.mfgDate,
      'Highlight': instance.highlight,
      'Other Highlights': instance.otherHighlights,
      'Jewellery Material': instance.jewelleryMaterial,
      'Purity': instance.purity,
      'Jewellery Weight': instance.jewelleryWeight,
      'Jewellery Color': instance.jewelleryColor,
      'Jewellery Size': instance.jewellerySize,
      'Gemstone': instance.gemstone,
      'Certification': instance.certification,
      'Title': instance.title,
      'Author': instance.author,
      'Publisher': instance.publisher,
      'Edition': instance.edition,
      'Language': instance.language,
      'ISBN': instance.isbn,
      'Pages': instance.pages,
      'Binding': instance.binding,
      'Genre': instance.genre,
      'Frame Material': instance.frameMaterial,
      'Mounting Type': instance.mountingType,
      'Shade Color': instance.shadeColor,
      'Beauty Type': instance.beautyType,
      'Ingredients': instance.ingredients,
      'Skin Hair Type': instance.skinHairType,
      'Beauty Weight Volume': instance.beautyWeightVolume,
      'Beauty Expiry Date': instance.beautyExpiryDate,
      'Dermatologically Tested': instance.dermatologicallyTested,
      'Dimension': instance.dimension,
      'Weight Capacity': instance.weightCapacity,
      'Assembly': instance.assembly,
      'Room Type': instance.roomType,
      'Weight Volume': instance.weightVolume,
      'Quantity': instance.quantity,
      'Organic': instance.organic,
      'Expiry Date': instance.expiryDate,
      'Storage Instruction': instance.storageInstruction,
      'Dietary Preference': instance.dietaryPreference,
      'Graphics': instance.graphics,
      'Screen Size': instance.screenSize,
      'Operating System': instance.operatingSystem,
      'Port': instance.port,
      'Footwear Material': instance.footwearMaterial,
      'Footwear Type': instance.footwearType,
      'Shoe Size': instance.shoeSize,
      'Heel Height': instance.heelHeight,
      'Sole Material': instance.soleMaterial,
      'Toe Shape': instance.toeShape,
    };
