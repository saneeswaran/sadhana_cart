// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'product_model.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

_$ProductModelImpl _$$ProductModelImplFromJson(Map<String, dynamic> json) =>
    _$ProductModelImpl(
      productId: json['productId'] as String?,
      name: json['name'] as String?,
      description: json['description'] as String?,
      category: json['category'] as String?,
      subcategory: json['subcategory'] as String?,
      baseSku: json['baseSku'] as String?,
      brand: json['brand'] as String?,
      price: (json['price'] as num?)?.toDouble(),
      offerPrice: (json['offerPrice'] as num?)?.toDouble(),
      stock: (json['stock'] as num?)?.toInt(),
      rating: (json['rating'] as num?)?.toDouble(),
      images:
          (json['images'] as List<dynamic>?)?.map((e) => e as String).toList(),
      sellerId: json['sellerId'] as String?,
      cashOnDelivery: json['cashOnDelivery'] as String?,
      sizeVariants: (json['sizeVariants'] as List<dynamic>?)
          ?.map((e) => SizeVariant.fromJson(e as Map<String, dynamic>))
          .toList(),
      timestamp: json['timestamp'] as String?,
      date: json['date'] as String?,
      material: json['material'] as String?,
      fit: json['fit'] as String?,
      pattern: json['pattern'] as String?,
      sleeveType: json['sleeveType'] as String?,
      careInstruction: json['careInstruction'] as String?,
      sizeOptions: (json['sizeOptions'] as List<dynamic>?)
          ?.map((e) => e as String)
          .toList(),
      hsnCode: json['hsnCode'] as String?,
      weight: (json['weight'] as num?)?.toDouble(),
      length: (json['length'] as num?)?.toDouble(),
      width: (json['width'] as num?)?.toDouble(),
      height: (json['height'] as num?)?.toDouble(),
      fitType: json['fitType'] as String?,
      gender: json['gender'] as String?,
      neckType: json['neckType'] as String?,
      occasion: json['occasion'] as String?,
      stitchType: json['stitchType'] as String?,
      vendor: json['vendor'] as String?,
      variantSku: json['variantSku'] as String?,
      closureType: json['closureType'] as String?,
      embroideryStyle: json['embroideryStyle'] as String?,
      lining: json['lining'] as String?,
      model: json['model'] as String?,
      neckStyle: json['neckStyle'] as String?,
      padType: json['padType'] as String?,
      pockets: json['pockets'] as String?,
      printType: json['printType'] as String?,
      productLength: json['productLength'] as String?,
      productType: json['productType'] as String?,
      riseStyle: json['riseStyle'] as String?,
      sideType: json['sideType'] as String?,
      sleeve: json['sleeve'] as String?,
      sleeveStyle: json['sleeveStyle'] as String?,
      slitType: json['slitType'] as String?,
      specialFeatures: json['specialFeatures'] as String?,
      strapType: json['strapType'] as String?,
      style: json['style'] as String?,
      transparent: json['transparent'] as bool?,
      type: json['type'] as String?,
      workType: json['workType'] as String?,
      blouseAvailability: json['blouseAvailability'] as bool?,
      patternCoverage: json['patternCoverage'] as String?,
      age: json['age'] as String?,
      ageGroup: json['ageGroup'] as String?,
      waistStyle: json['waistStyle'] as String?,
      mobileColor: json['mobileColor'] as String?,
      ram: json['ram'] as String?,
      storage: json['storage'] as String?,
      battery: json['battery'] as String?,
      camera: json['camera'] as String?,
      processor: json['processor'] as String?,
      display: json['display'] as String?,
      os: json['os'] as String?,
      connectivity: json['connectivity'] as String?,
      warranty: json['warranty'] as String?,
      color: json['color'] as String?,
      designOptions: json['designOptions'] as String?,
      resolution: json['resolution'] as String?,
      displayType: json['displayType'] as String?,
      smartFeatures: json['smartFeatures'] as String?,
      energyRating: json['energyRating'] as String?,
      powerConsumption: json['powerConsumption'] as String?,
      expDate: json['expDate'] == null
          ? null
          : DateTime.parse(json['expDate'] as String),
      mfgDate: json['mfgDate'] as String?,
      highlight: json['highlight'] as String?,
      otherHighlights: json['otherHighlights'] as String?,
      jewelleryMaterial: json['jewelleryMaterial'] as String?,
      purity: json['purity'] as String?,
      jewelleryWeight: (json['jewelleryWeight'] as num?)?.toDouble(),
      jewelleryColor: json['jewelleryColor'] as String?,
      jewellerySize: json['jewellerySize'] as String?,
      gemstone: json['gemstone'] as String?,
      certification: json['certification'] as String?,
      title: json['title'] as String?,
      author: json['author'] as String?,
      publisher: json['publisher'] as String?,
      edition: json['edition'] as String?,
      language: json['language'] as String?,
      isbn: json['isbn'] as String?,
      pages: (json['pages'] as num?)?.toInt(),
      binding: json['binding'] as String?,
      genre: json['genre'] as String?,
      frameMaterial: json['frameMaterial'] as String?,
      mountingType: json['mountingType'] as String?,
      shadeColor: json['shadeColor'] as String?,
      beautyType: json['beautyType'] as String?,
      ingredients: (json['ingredients'] as List<dynamic>?)
          ?.map((e) => e as String)
          .toList(),
      skinHairType: json['skinHairType'] as String?,
      beautyWeightVolume: json['beautyWeightVolume'] as String?,
      beautyExpiryDate: json['beautyExpiryDate'] as String?,
      dermatologicallyTested: json['dermatologicallyTested'] as bool?,
      dimension: json['dimension'] as String?,
      weightCapacity: json['weightCapacity'] as String?,
      assembly: json['assembly'] as String?,
      roomType: json['roomType'] as String?,
      weightVolume: json['weightVolume'] as String?,
      quantity: json['quantity'] as String?,
      organic: json['organic'] as bool?,
      expiryDate: json['expiryDate'] as String?,
      storageInstruction: json['storageInstruction'] as String?,
      dietaryPreference: json['dietaryPreference'] as String?,
      graphics: json['graphics'] as String?,
      screenSize: json['screenSize'] as String?,
      operatingSystem: json['operatingSystem'] as String?,
      port: json['port'] as String?,
      footwearMaterial: json['footwearMaterial'] as String?,
      footwearType: json['footwearType'] as String?,
      shoeSize: json['shoeSize'] as String?,
      heelHeight: json['heelHeight'] as String?,
      soleMaterial: json['soleMaterial'] as String?,
      toeShape: json['toeShape'] as String?,
    );

Map<String, dynamic> _$$ProductModelImplToJson(_$ProductModelImpl instance) =>
    <String, dynamic>{
      'productId': instance.productId,
      'name': instance.name,
      'description': instance.description,
      'category': instance.category,
      'subcategory': instance.subcategory,
      'baseSku': instance.baseSku,
      'brand': instance.brand,
      'price': instance.price,
      'offerPrice': instance.offerPrice,
      'stock': instance.stock,
      'rating': instance.rating,
      'images': instance.images,
      'sellerId': instance.sellerId,
      'cashOnDelivery': instance.cashOnDelivery,
      'sizeVariants': instance.sizeVariants,
      'timestamp': instance.timestamp,
      'date': instance.date,
      'material': instance.material,
      'fit': instance.fit,
      'pattern': instance.pattern,
      'sleeveType': instance.sleeveType,
      'careInstruction': instance.careInstruction,
      'sizeOptions': instance.sizeOptions,
      'hsnCode': instance.hsnCode,
      'weight': instance.weight,
      'length': instance.length,
      'width': instance.width,
      'height': instance.height,
      'fitType': instance.fitType,
      'gender': instance.gender,
      'neckType': instance.neckType,
      'occasion': instance.occasion,
      'stitchType': instance.stitchType,
      'vendor': instance.vendor,
      'variantSku': instance.variantSku,
      'closureType': instance.closureType,
      'embroideryStyle': instance.embroideryStyle,
      'lining': instance.lining,
      'model': instance.model,
      'neckStyle': instance.neckStyle,
      'padType': instance.padType,
      'pockets': instance.pockets,
      'printType': instance.printType,
      'productLength': instance.productLength,
      'productType': instance.productType,
      'riseStyle': instance.riseStyle,
      'sideType': instance.sideType,
      'sleeve': instance.sleeve,
      'sleeveStyle': instance.sleeveStyle,
      'slitType': instance.slitType,
      'specialFeatures': instance.specialFeatures,
      'strapType': instance.strapType,
      'style': instance.style,
      'transparent': instance.transparent,
      'type': instance.type,
      'workType': instance.workType,
      'blouseAvailability': instance.blouseAvailability,
      'patternCoverage': instance.patternCoverage,
      'age': instance.age,
      'ageGroup': instance.ageGroup,
      'waistStyle': instance.waistStyle,
      'mobileColor': instance.mobileColor,
      'ram': instance.ram,
      'storage': instance.storage,
      'battery': instance.battery,
      'camera': instance.camera,
      'processor': instance.processor,
      'display': instance.display,
      'os': instance.os,
      'connectivity': instance.connectivity,
      'warranty': instance.warranty,
      'color': instance.color,
      'designOptions': instance.designOptions,
      'resolution': instance.resolution,
      'displayType': instance.displayType,
      'smartFeatures': instance.smartFeatures,
      'energyRating': instance.energyRating,
      'powerConsumption': instance.powerConsumption,
      'expDate': instance.expDate?.toIso8601String(),
      'mfgDate': instance.mfgDate,
      'highlight': instance.highlight,
      'otherHighlights': instance.otherHighlights,
      'jewelleryMaterial': instance.jewelleryMaterial,
      'purity': instance.purity,
      'jewelleryWeight': instance.jewelleryWeight,
      'jewelleryColor': instance.jewelleryColor,
      'jewellerySize': instance.jewellerySize,
      'gemstone': instance.gemstone,
      'certification': instance.certification,
      'title': instance.title,
      'author': instance.author,
      'publisher': instance.publisher,
      'edition': instance.edition,
      'language': instance.language,
      'isbn': instance.isbn,
      'pages': instance.pages,
      'binding': instance.binding,
      'genre': instance.genre,
      'frameMaterial': instance.frameMaterial,
      'mountingType': instance.mountingType,
      'shadeColor': instance.shadeColor,
      'beautyType': instance.beautyType,
      'ingredients': instance.ingredients,
      'skinHairType': instance.skinHairType,
      'beautyWeightVolume': instance.beautyWeightVolume,
      'beautyExpiryDate': instance.beautyExpiryDate,
      'dermatologicallyTested': instance.dermatologicallyTested,
      'dimension': instance.dimension,
      'weightCapacity': instance.weightCapacity,
      'assembly': instance.assembly,
      'roomType': instance.roomType,
      'weightVolume': instance.weightVolume,
      'quantity': instance.quantity,
      'organic': instance.organic,
      'expiryDate': instance.expiryDate,
      'storageInstruction': instance.storageInstruction,
      'dietaryPreference': instance.dietaryPreference,
      'graphics': instance.graphics,
      'screenSize': instance.screenSize,
      'operatingSystem': instance.operatingSystem,
      'port': instance.port,
      'footwearMaterial': instance.footwearMaterial,
      'footwearType': instance.footwearType,
      'shoeSize': instance.shoeSize,
      'heelHeight': instance.heelHeight,
      'soleMaterial': instance.soleMaterial,
      'toeShape': instance.toeShape,
    };
